AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  SinatraFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SinatraApp
      Handler: lambda.handler
      Runtime: ruby2.5
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: LeadsTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SubscribersTable
      CodeUri: s3://serverless-sinatra-example-bucket/371a1041a01b3b64b9e4d941521dd25f
      MemorySize: 512
      Timeout: 30
      Events:
        SinatraApi:
          Type: Api
          Properties:
            Path: /
            Method: ANY
            RestApiId:
              Ref: SinatraAPI
  SinatraAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: SinatraAPI
      StageName: Prod
      DefinitionBody:
        swagger: '2.0'
        basePath: /
        info:
          title:
            Ref: AWS::StackName
        paths:
          /{proxy+}:
            x-amazon-apigateway-any-method:
              responses: {}
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SinatraFunction.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
          /:
            get:
              responses: {}
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SinatraFunction.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
  ConfigLambdaPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
    - SinatraFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: SinatraFunction
      Principal: apigateway.amazonaws.com
  LeadsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: LandpageLead
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  SubscribersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      - AttributeName: email
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: EmailSubscribers
      GlobalSecondaryIndexes:
      - IndexName: myGSI
        KeySchema:
        - AttributeName: email
          KeyType: HASH
        Projection:
          NonKeyAttributes:
          - email
          ProjectionType: INCLUDE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
Outputs:
  SinatraAppUrl:
    Description: App endpoint URL
    Value:
      Fn::Sub: https://${SinatraAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod
